//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entretien.Client {
    
    
    public partial class EntretienClientSyncProvider : Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider {
        
        public EntretienClientSyncProvider() {
            this.ConnectionString = ("Data Source=" 
                        + (System.IO.Path.Combine(System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase), "entretienl.sdf") + ";Max Database Size=2047"));
        }
        
        public EntretienClientSyncProvider(string connectionString) {
            this.ConnectionString = connectionString;
        }
    }
    
    public partial class EntretienSyncAgent : Microsoft.Synchronization.SyncAgent {
        
        private ClientSyncTable _clientSyncTable;
        
        private CommandeSyncTable _commandeSyncTable;
        
        partial void OnInitialized();
        
        public EntretienSyncAgent() {
            this.InitializeSyncProviders();
            this.InitializeSyncTables();
            this.OnInitialized();
        }
        
        public EntretienSyncAgent(object remoteSyncProviderProxy) {
            this.InitializeSyncProviders();
            this.InitializeSyncTables();
            this.RemoteProvider = new Microsoft.Synchronization.Data.ServerSyncProviderProxy(remoteSyncProviderProxy);
            this.OnInitialized();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ClientSyncTable Client {
            get {
                return this._clientSyncTable;
            }
            set {
                this.Configuration.SyncTables.Remove(this._clientSyncTable);
                this._clientSyncTable = value;
                this.Configuration.SyncTables.Add(this._clientSyncTable);
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CommandeSyncTable Commande {
            get {
                return this._commandeSyncTable;
            }
            set {
                this.Configuration.SyncTables.Remove(this._commandeSyncTable);
                this._commandeSyncTable = value;
                this.Configuration.SyncTables.Add(this._commandeSyncTable);
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitializeSyncProviders() {
            // Create SyncProviders.
            this.LocalProvider = new EntretienClientSyncProvider();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitializeSyncTables() {
            // Create SyncTables.
            this._clientSyncTable = new ClientSyncTable();
            this._clientSyncTable.SyncGroup = new Microsoft.Synchronization.Data.SyncGroup("ClientSyncTableSyncGroup");
            this.Configuration.SyncTables.Add(this._clientSyncTable);
            this._commandeSyncTable = new CommandeSyncTable();
            this._commandeSyncTable.SyncGroup = new Microsoft.Synchronization.Data.SyncGroup("CommandeSyncTableSyncGroup");
            this.Configuration.SyncTables.Add(this._commandeSyncTable);
        }
        
        public partial class ClientSyncTable : Microsoft.Synchronization.Data.SyncTable {
            
            partial void OnInitialized();
            
            public ClientSyncTable() {
                this.InitializeTableOptions();
                this.OnInitialized();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitializeTableOptions() {
                this.TableName = "Client";
                this.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable;
            }
        }
        
        public partial class CommandeSyncTable : Microsoft.Synchronization.Data.SyncTable {
            
            partial void OnInitialized();
            
            public CommandeSyncTable() {
                this.InitializeTableOptions();
                this.OnInitialized();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitializeTableOptions() {
                this.TableName = "Commande";
                this.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable;
            }
        }
    }
}
